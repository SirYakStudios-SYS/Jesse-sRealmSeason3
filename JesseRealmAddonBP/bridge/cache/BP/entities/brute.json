{
	"file_path": "C:\\Users\\Owner\\AppData\\Local\\Packages\\Microsoft.MinecraftUWP_8wekyb3d8bbwe\\LocalState\\games\\com.mojang\\development_behavior_packs\\Shields V2\\entities\\brute.json",
	"file_type": "entity",
	"format_version": 1,
	"file_uuid": "f5464204_517f_4599_8a3b_140e54dd2ce0",
	"file_version": 0,
	"cache_content": {
		"is_minified": true,
		"children": {
			"format_version": "1.16.0",
			"minecraft:entity": {
				"description": {
					"identifier": "minecraft:piglin_brute",
					"is_spawnable": true,
					"is_summonable": true,
					"is_experimental": false,
					"scripts": {
						"animate": [
							"atk"
						]
					},
					"animations": {
						"atk": "controller.animation.attacking"
					}
				},
				"component_groups": {
					"zombification_sensor": {
						"minecraft:environment_sensor": {
							"triggers": {
								"filters": {
									"test": "in_nether",
									"subject": "self",
									"operator": "==",
									"value": false
								},
								"event": "start_zombification_event"
							}
						}
					},
					"start_zombification": {
						"minecraft:is_shaking": {},
						"minecraft:environment_sensor": {
							"triggers": {
								"filters": {
									"test": "in_nether",
									"subject": "self",
									"operator": "==",
									"value": true
								},
								"event": "stop_zombification_event"
							}
						},
						"minecraft:timer": {
							"looping": false,
							"time": 15,
							"time_down_event": {
								"event": "become_zombie_event"
							}
						}
					},
					"become_zombie": {
						"minecraft:transformation": {
							"into": "minecraft:zombie_pigman",
							"transformation_sound": "converted_to_zombified",
							"keep_level": true,
							"preserve_equipment": true
						}
					},
					"melee_unit": {
						"minecraft:behavior.melee_attack": {
							"priority": 4,
							"speed_multiplier": 1,
							"track_target": true
						},
						"minecraft:attack": {
							"damage": 7
						},
						"minecraft:equipment": {
							"table": "loot_tables/entities/piglin_brute_gear.json"
						},
						"minecraft:variant": {
							"value": 1
						}
					},
					"angry": {
						"minecraft:angry": {
							"duration": 30,
							"broadcast_anger": false,
							"broadcast_anger_on_attack": false,
							"broadcast_anger_on_being_attacked": true,
							"broadcast_range": 16,
							"broadcast_targets": [
								"piglin"
							],
							"calm_event": {
								"event": "become_calm_event",
								"target": "self"
							},
							"filters": {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"operator": "!=",
										"value": "piglin"
									}
								]
							},
							"angry_sound": "angry",
							"sound_interval": {
								"range_min": 2,
								"range_max": 5
							}
						}
					},
					"alert_for_attack_targets": {
						"minecraft:behavior.nearest_prioritized_attackable_target": {
							"priority": 3,
							"within_radius": 12,
							"persist_time": 2,
							"must_see": true,
							"entity_types": [
								{
									"filters": {
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									"max_dist": 12,
									"priority": 0
								},
								{
									"filters": {
										"test": "is_family",
										"subject": "other",
										"value": "wither"
									},
									"max_dist": 12,
									"priority": 1
								}
							]
						}
					},
					"take_target_as_response_to_block_break": {
						"minecraft:behavior.nearest_attackable_target": {
							"priority": 3,
							"entity_types": [
								{
									"filters": {
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									"max_dist": 16
								}
							]
						}
					},
					"go_back_to_spawn": {
						"minecraft:behavior.go_home": {
							"priority": 6,
							"interval": 200,
							"speed_multiplier": 0.6,
							"goal_radius": 4,
							"on_failed": {
								"event": "go_back_to_spawn_failed",
								"target": "self"
							}
						}
					},
					"slime": {
						"minecraft:entity_sensor": {
							"sensor_range": 6,
							"minimum_count": 1,
							"maximum_count": 10,
							"event_filters": {
								"all_of": [
									{
										"test": "is_sneaking",
										"operator": "==",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "slime:shield",
										"domain": "hand"
									}
								]
							},
							"event": "slime_add"
						}
					},
					"magma": {
						"minecraft:entity_sensor": {
							"sensor_range": 6,
							"minimum_count": 1,
							"maximum_count": 10,
							"event_filters": {
								"all_of": [
									{
										"test": "is_sneaking",
										"operator": "==",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "magma:shield",
										"domain": "hand"
									}
								]
							},
							"event": "magma_add"
						}
					},
					"shulker": {
						"minecraft:entity_sensor": {
							"sensor_range": 6,
							"minimum_count": 1,
							"maximum_count": 10,
							"event_filters": {
								"all_of": [
									{
										"test": "is_sneaking",
										"operator": "==",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "shulker:shield",
										"domain": "hand"
									}
								]
							},
							"event": "shulker_add"
						}
					},
					"evocation": {
						"minecraft:entity_sensor": {
							"sensor_range": 6,
							"minimum_count": 1,
							"maximum_count": 10,
							"event_filters": {
								"all_of": [
									{
										"test": "is_sneaking",
										"operator": "==",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "evocation:shield",
										"domain": "hand"
									}
								]
							},
							"event": "evocation_add"
						}
					},
					"amethyst": {
						"minecraft:entity_sensor": {
							"sensor_range": 6,
							"minimum_count": 1,
							"maximum_count": 10,
							"event_filters": {
								"all_of": [
									{
										"test": "is_sneaking",
										"operator": "==",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "amethyst:shield",
										"domain": "hand"
									}
								]
							},
							"event": "amethyst_add"
						}
					},
					"iron_shield": {
						"minecraft:entity_sensor": {
							"sensor_range": 6,
							"minimum_count": 1,
							"maximum_count": 10,
							"event_filters": {
								"all_of": [
									{
										"test": "is_sneaking",
										"operator": "==",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "iron:shield",
										"domain": "hand"
									}
								]
							},
							"event": "iron_add"
						}
					},
					"cactus": {
						"minecraft:entity_sensor": {
							"sensor_range": 6,
							"minimum_count": 1,
							"maximum_count": 10,
							"event_filters": {
								"all_of": [
									{
										"test": "is_sneaking",
										"operator": "==",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "cactus:shield",
										"domain": "hand"
									}
								]
							},
							"event": "cactus_add"
						}
					},
					"sneak": {
						"minecraft:entity_sensor": {
							"sensor_range": 6,
							"minimum_count": 1,
							"maximum_count": 10,
							"event_filters": {
								"none_of": [
									{
										"test": "is_sneaking",
										"operator": "==",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "cactus:shield",
										"domain": "hand"
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "iron:shield",
										"domain": "hand"
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "amethyst:shield",
										"domain": "hand"
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "evocation:shield",
										"domain": "hand"
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "shulker:shield",
										"domain": "hand"
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "magma:shield",
										"domain": "hand"
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "slime:shield",
										"domain": "hand"
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "roble_cobre:shield",
										"domain": "hand"
									}
								]
							},
							"event": "sneak_remove"
						}
					},
					"copper": {
						"minecraft:entity_sensor": {
							"sensor_range": 6,
							"minimum_count": 1,
							"maximum_count": 10,
							"event_filters": {
								"all_of": [
									{
										"test": "is_sneaking",
										"operator": "==",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"operator": "==",
										"subject": "other",
										"value": "roble_cobre:shield",
										"domain": "hand"
									},
									{
										"test": "weather",
										"operator": "==",
										"value": "precipitation"
									}
								]
							},
							"event": "copper_add"
						}
					}
				},
				"components": {
					"minecraft:is_hidden_when_invisible": {},
					"minecraft:collision_box": {
						"width": 0.6,
						"height": 1.9
					},
					"minecraft:type_family": {
						"family": [
							"piglin",
							"adult_piglin",
							"piglin_brute",
							"monster"
						]
					},
					"minecraft:home": {},
					"minecraft:conditional_bandwidth_optimization": {},
					"minecraft:experience_reward": {
						"on_death": "query.last_hit_by_player ? 20 : 0"
					},
					"minecraft:on_target_acquired": {
						"event": "become_angry_event",
						"target": "self"
					},
					"minecraft:breathable": {
						"total_supply": 15,
						"suffocate_time": 0
					},
					"minecraft:health": {
						"value": 50,
						"max": 50
					},
					"minecraft:hurt_on_condition": {
						"damage_conditions": [
							{
								"filters": {
									"test": "in_lava",
									"subject": "self",
									"operator": "==",
									"value": true
								},
								"cause": "lava",
								"damage_per_tick": 4
							}
						]
					},
					"minecraft:loot": {
						"table": "loot_tables/entities/piglin.json"
					},
					"minecraft:movement": {
						"value": 0.35
					},
					"minecraft:navigation.walk": {
						"can_path_over_water": true,
						"can_open_doors": true
					},
					"minecraft:annotation.open_door": {},
					"minecraft:movement.basic": {},
					"minecraft:jump.static": {},
					"minecraft:nameable": {},
					"minecraft:despawn": {
						"filters": {
							"any_of": [
								{
									"all_of": [
										{
											"test": "is_persistent",
											"value": false
										},
										{
											"test": "distance_to_nearest_player",
											"operator": ">",
											"value": 54
										}
									]
								},
								{
									"all_of": [
										{
											"test": "is_persistent",
											"value": false
										},
										{
											"test": "inactivity_timer",
											"subject": "self",
											"value": 30
										},
										{
											"test": "random_chance",
											"value": 800
										},
										{
											"test": "distance_to_nearest_player",
											"operator": ">",
											"value": 32
										}
									]
								}
							]
						}
					},
					"minecraft:behavior.hurt_by_target": {
						"priority": 1
					},
					"minecraft:behavior.random_stroll": {
						"priority": 7,
						"speed_multiplier": 0.6
					},
					"minecraft:behavior.look_at_player": {
						"priority": 8,
						"look_distance": 8
					},
					"minecraft:behavior.random_look_around": {
						"priority": 9
					},
					"minecraft:physics": {},
					"minecraft:pushable": {
						"is_pushable": true,
						"is_pushable_by_piston": true
					},
					"minecraft:follow_range": {
						"value": 64
					}
				},
				"events": {
					"minecraft:entity_spawned": {
						"add": {
							"component_groups": [
								"zombification_sensor",
								"alert_for_attack_targets",
								"melee_unit",
								"go_back_to_spawn"
							]
						}
					},
					"stop_zombification_event": {
						"add": {
							"component_groups": [
								"zombification_sensor"
							]
						},
						"remove": {
							"component_groups": [
								"start_zombification"
							]
						}
					},
					"start_zombification_event": {
						"add": {
							"component_groups": [
								"start_zombification"
							]
						},
						"remove": {
							"component_groups": [
								"zombification_sensor"
							]
						}
					},
					"become_angry_event": {
						"add": {
							"component_groups": [
								"angry"
							]
						}
					},
					"become_calm_event": {
						"remove": {
							"component_groups": [
								"angry"
							]
						},
						"add": {
							"component_groups": [
								"alert_for_attack_targets"
							]
						}
					},
					"become_zombie_event": {
						"add": {
							"component_groups": [
								"become_zombie"
							]
						}
					},
					"important_block_destroyed_event": {
						"remove": {
							"component_groups": [
								"alert_for_attack_targets"
							]
						},
						"add": {
							"component_groups": [
								"take_target_as_response_to_block_break"
							]
						}
					},
					"go_back_to_spawn_failed": {
						"remove": {
							"component_groups": [
								"go_back_to_spawn"
							]
						}
					},
					"slime": {
						"add": {
							"component_groups": [
								"slime"
							]
						}
					},
					"slime_add": {
						"run_command": {
							"command": [
								"tag @s add slime",
								"tag @s remove magma",
								"tag @s remove evocation",
								"tag @s remove shulker",
								"tag @s remove amethyst",
								"tag @s remove iron",
								"tag @s remove cactus"
							]
						}
					},
					"magma": {
						"add": {
							"component_groups": [
								"magma"
							]
						}
					},
					"magma_add": {
						"run_command": {
							"command": [
								"tag @s add magma",
								"tag @s remove slime",
								"tag @s remove evocation",
								"tag @s remove shulker",
								"tag @s remove amethyst",
								"tag @s remove iron",
								"tag @s remove cactus",
								"tag @s remove copper"
							]
						}
					},
					"shulker": {
						"add": {
							"component_groups": [
								"shulker"
							]
						}
					},
					"shulker_add": {
						"run_command": {
							"command": [
								"tag @s remove slime",
								"tag @s remove magma",
								"tag @s add shulker",
								"tag @s remove evocation",
								"tag @s remove amethyst",
								"tag @s remove iron",
								"tag @s remove cactus",
								"tag @s remove copper"
							]
						}
					},
					"evocation": {
						"add": {
							"component_groups": [
								"evocation"
							]
						}
					},
					"evocation_add": {
						"run_command": {
							"command": [
								"tag @s remove slime",
								"tag @s remove magma",
								"tag @s remove shulker",
								"tag @s add evocation",
								"tag @s remove amethyst",
								"tag @s remove iron",
								"tag @s remove cactus",
								"tag @s remove copper"
							]
						}
					},
					"amethyst": {
						"add": {
							"component_groups": [
								"amethyst"
							]
						}
					},
					"amethyst_add": {
						"run_command": {
							"command": [
								"tag @s remove slime",
								"tag @s remove magma",
								"tag @s remove shulker",
								"tag @s remove evocation",
								"tag @s add amethyst",
								"tag @s remove iron",
								"tag @s remove cactus",
								"tag @s remove copper"
							]
						}
					},
					"iron": {
						"add": {
							"component_groups": [
								"iron_shield"
							]
						}
					},
					"iron_add": {
						"run_command": {
							"command": [
								"tag @s remove slime",
								"tag @s remove magma",
								"tag @s remove shulker",
								"tag @s remove evocation",
								"tag @s remove amethyst",
								"tag @s add iron",
								"tag @s remove cactus",
								"tag @s remove copper"
							]
						}
					},
					"cactus_add": {
						"run_command": {
							"command": [
								"tag @s remove slime",
								"tag @s remove magma",
								"tag @s remove shulker",
								"tag @s remove evocation",
								"tag @s remove amethyst",
								"tag @s remove iron",
								"tag @s add cactus",
								"tag @s remove copper"
							]
						}
					},
					"cactus": {
						"add": {
							"component_groups": [
								"cactus"
							]
						}
					},
					"sneak_remove": {
						"run_command": {
							"command": [
								"tag @s remove slime",
								"tag @s remove magma",
								"tag @s remove shulker",
								"tag @s remove evocation",
								"tag @s remove amethyst",
								"tag @s remove iron",
								"tag @s remove cactus",
								"tag @s remove copper"
							]
						}
					},
					"sneak": {
						"add": {
							"component_groups": [
								"sneak"
							]
						}
					},
					"copper": {
						"add": {
							"component_groups": [
								"copper"
							]
						}
					},
					"copper_add": {
						"run_command": {
							"command": [
								"tag @s remove magma",
								"tag @s remove slime",
								"tag @s remove evocation",
								"tag @s remove shulker",
								"tag @s remove amethyst",
								"tag @s remove iron",
								"tag @s remove cactus",
								"tag @s add copper"
							]
						}
					}
				}
			}
		}
	}
}